<!-- /templates/product.liquid -->

{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}


{% if section.settings.logo %}
  <a href="/" itemprop="url" class="site-header__logo-image{% if section.settings.align_logo == 'center' %} site-header__logo-image--centered{% endif %}">
    {% capture image_size %}{{ section.settings.logo_max_width | escape }}x{% endcapture %}
    <img src="{{ section.settings.logo | img_url: image_size }}"
         srcset="{{ section.settings.logo | img_url: image_size }} 1x, {{ section.settings.logo | img_url: image_size, scale: 2 }} 2x"
         alt="{{ section.settings.logo.alt | default: shop.name }}"
         itemprop="logo">
  </a>
{% else %}
  <a  data-fade="in" class="site-header__logo-link main__logo-link product__logo-link" data-module-init="home-link" href="/" itemprop="url">{{ shop.name }}</a>
{% endif %}



<div data-fade="in" itemscope itemtype="http://schema.org/Product" data-module-init="product" data-template="product" class="product-container page-template">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

  {% comment %}
    Get first variant, or deep linked one
  {% endcomment %}
  {% assign current_variant = product.selected_or_first_available_variant %}

  <div class="product-single">

      <div class="product-photos">
       {% for image in product.images %}
         <div class="product-photo" style="background-image:url({{ {{ image.src | img_url: 'pico' }} }})">
         
            <img data-large-src="{{ image.src | img_url: '1024x' }}" {% if forloop.index > 1 %}src="{{ image.src | img_url: 'pico' }}"{% else %} src="{{ image.src | img_url: '1024x' }}"{% endif %} lt="{{ image.alt | escape }}" class="{% if forloop.index > 1 %}image-hidden {% endif %}product-image grid__item-image {% if image.width < image.height %}portrait{% endif %}" />

         </div>
       {% endfor %}
      </div>
      
    <div class="mobile-product-photos" data-module-init="mobile-product-photos">
        <div class="mobile-product-photos-inner" style="width:{{ product.images.size | times:100 }}vw">
          {% for image in product.images %}
                <div style="background-image:url( {{ image.src | img_url: '1024x' }} ); background-position:{% if image.alt == blank %}center center;{% else %}center {{ image.alt | escape }};{% endif %}" alt="{{ image.alt | escape }}" class="mobile-product-image grid__item-image {% if image.width < image.height %}portrait{% endif %}" ></div>
          {% endfor %}
        </div>
    </div>
    
    {% if product.images.size > 1 %}
    <div class="photo-position" data-module-init="product-scroll">
       {% for image in product.images %}
       		<button class="photo-position-block {% if forloop.index == 1 %}active{% endif %}"><span></span></button>
       {% endfor %}
    </div>
    {% endif %}

    <div class="product-description-container" data-module-init="wheel-container" data-scroll-container="MainContent">

      

      <div itemprop="offers" class="product-description-inner-container" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="priceCurrency" content="{{ shop.currency }}">

        <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

        {% comment %}
          ID addToCartForm is a selector for the ajax cart plugin
        {% endcomment %}
		
        <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" class="form-vertical">

          {% comment %}
            Add product variants as a dropdown.
              - By default, each variant (or combination of variants) will display as its own <option>
              - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

            You can leverage jQuery to add a callback on page load and each time the select element changes:
              - Include option_selection.js (as seen at the bottom of this file)
              - This allows you to use JavaScript anytime the variant dropdown changes
              - This also separates out your variant options (ie. size, color, etc.) to separate select elements

            For more information on products with multiple options, visit:
              - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
          {% endcomment %}
          
		  
		  <h1 itemprop="name">{{ product.title }}</h1>
         
          <span id="ProductPrice" class="h3" itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}">
            {{ current_variant.price | money_without_trailing_zeros  }}
          </span>
		  
	      <div class="product-description rte" itemprop="description">
	        {{ product.description }}
	      </div>
		  
		  {% assign option_1 = '' %}
		  {% assign option_2 = '' %}
		  
		  <div class="product-variants-holder">
      
      
      {% assign po  = '' %}
      
      
      
      {% assign selected_variants = '' %}
      {% if product.options.size >= 1 %}
      
        {% for option in product.options %}
            
            {% assign fi = forloop.index %}
            {% assign variant_test = '' %}
            
            {% for variant in product.variants %}
              
           
              {% assign option_num = 'option' | append: fi  %}
  
              {% if product.selected_variant.title contains variant.title %}
                {% assign selected_variants = selected_variants | append: variant[option_num] | append: ', ' %}
              {% endif %}
              
              {% if variant_test contains variant[option_num] %}
              
              {% else %}
                
                {% assign variant_test = variant_test | append: variant[option_num] %}
                
                
                
                
              {% endif %}
              
              
            {% endfor %}
          
        {% endfor %}
        
      
        
      {% endif %}
      
      {% assign variable_array = selected_variants | split:', ' %}
      
      
		  {% if product.options.size >= 1 %}

			  {% for option in product.options %}
  
			  <div class="product-variant">
			  {% assign fi = forloop.index %}
			  
			  	<div class="product-variants-title"><label class="caps">Select {{ option }}</label></div>
				{% assign variant_test = '' %}
				<ul class="product-variants">
					{% for variant in product.variants %}
          
	        
					{% assign option_num = 'option' | append: fi  %}
					
					{% if variant_test contains variant[option_num] %}
					{% else %}
					{% assign variant_test = variant_test | append: variant[option_num] %}
					<li data-variant-id="{{ variant.id }}" data-variant-title="{{ variant[option_num] }}">
	                <input type="radio"{% if variant.compare_at_price > variant.price %} data-compare-at-price="{{ variant.compare_at_price | money_with_currency }}"{% endif %} data-price="${{ variant.price | money_without_trailing_zeros }}" id="{{ variant.id }}" value="{{ variant.id }}" name="id"{% if found_available_variant == false  %}{% assign found_available_variant = true %} {% endif %} {% if variant == product.selected_or_first_available_variant or product.selected_variant.title contains variant[option_num] %} checked="checked" {% endif %} />
       
	                <label data-role="none" class="variant-label {% if variant == product.selected_or_first_available_variant %} selected {% endif %} {% for v in variable_array %}{% if variant[option_num] contains v %} selected {% endif %}{% endfor %} " for="{{ variant.id }}">{{ variant[option_num] }}</label>{% if forloop.index != forloop.length | minus:2 %}<span class="comma">,</span>{% endif %}
					</li>
					{% endif %}
					
					{% endfor %}
				</ul><!-- variants -->
				</div>
			  {% endfor %}
		    {% endif %}
			</div>
			

		  
          <select style="display:none;" name="id" id="productSelect" class="product-single__variants">
            {% for variant in product.variants %}
              {% if variant.available %}

                {% comment %}
                  Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
                {% endcomment %}
                <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_without_trailing_zeros }}</option>

              {% else %}
                <option disabled="disabled">
                  {{ variant.title }} - {{ 'products.product.sold_out' | t }}
                </option>
              {% endif %}
            {% endfor %}
          </select>

		  

          {% if product.compare_at_price_max > product.price %}
            <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
            <p id="ComparePrice">
              {{ 'products.product.compare_at' | t }} {{ current_variant.compare_at_price | money_without_trailing_zeros }}
            </p>
          {% endif %}
		  
		  {% comment %}
          <label for="Quantity" class="quantity-selector">{{ 'products.product.quantity' | t }}</label>
          <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-selector">
		  {% endcomment %}
		  
		  
          <button type="submit" name="add" id="AddToCart" data-variant-selected="{{ product.selected_variant.id }}" class="hover btn">
            {{ 'products.product.add_to_cart' | t }}
          </button>
        </form>

      </div>

      

      {% comment %}
        If the user is on a collection product page (ie with /collections/collection-handle/products/product-handle)
        in the URL, we can show next/previous links to other products in the collection.
      
      {% if collection %}
        {% if collection.previous_product or collection.next_product %}
          <p>
            {% if collection.previous_product %}
              <span class="left">
                {{ 'products.general.previous_product_html' | t | link_to: collection.previous_product }}
              </span>
            {% endif %}
            {% if collection.next_product %}
              <span class="right">
                {{ 'products.general.next_product_html' | t | link_to: collection.next_product }}
              </span>
            {% endif %}
          </p>
        {% endif %}
      {% endif %}
	  
	  {% endcomment %}

    </div>
  </div>

</div>

{% include 'footer-nav' %}

{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}


<script>
  
  console.log('%c PDP script', 'color:red')
	
  var variant_selected_for_purchase;
  
	jQuery(function($) {
		console.log('Product scripts ready');
		
		$('#AddToCart').on('click', addToCartClick);
		$('input[type="radio"]').on('change', inputRadioChange);
		
    
		function inputRadioChange(e){
			var $form = $(e.currentTarget).closest('form');
			var $checked = $form.find('input[name=id]:checked');
			var $lineItemInput = $form.find('.line-item-input');
			var $price = $form.find('.price');
      //$price = $price.split('.00').join('')
			
      console.log('input radio change')
      
			$lineItemInput.val($checked.val());
			$price.text( $checked.data('price') );
			//changeVariantImage($form, $checked.val());
		}
		
		function changeVariantImage($parent, id){
			var $form = $parent;
			var index = $form.parent().index();
			$form.find('.main-images button').hide();
			$form.find('.main-images button[id="variant-image-'+ id +'"]').show();
			$('.product-drawer-container').eq(index).find('.product-drawer-image').removeClass('active');
			$('#drawer-variant-image-'+ id).addClass('active');
		}
    
    function getVariant(id){
      
    }
		
		function addToCartClick(e) {
			e.preventDefault();
			
			//var $form = $(e.currentTarget).closest('form');
			//var idNum = $form.find('input[name="id"]').val();
			
   
      
			Shopify.addItem(variant_selected_for_purchase, 1, function(){
			    itemAdded();
			});
			
			console.log( 'variant selected ' + variant_selected_for_purchase );
		}
		

		function itemAdded(){
			console.log('itemAdded');
			//var $cart = $('.site-header__cart');
			//var $cartCount = $cart.find('span');
			
			updateCart();
			updateCartCount();
			
		}
	});
	
  
  var selectCallback = function(variant, selector) {
    timber.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector
    });
    console.log(variant)
    $('#AddToCart').attr('data-variant-selected', variant.id);
    
    variant_selected_for_purchase = variant.id;
  };
  
  /*
  function trackInventory(variant) {
    if(variant.inventory_quantity == 0) {
      console.log('sold out');
    }
  }
  */

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
